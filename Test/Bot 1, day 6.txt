const Discord = require("discord.js");

const ytdl = require("ytdl-core");
const { connect } = require("http2");
const Client = new Discord.Client;
const prefix = "$";
const Queue = new Map();
const { YTSearcher } = require('ytsearcher');
const  { fontcolor } = require("ffmpeg-static");
const { title } = require("process");
const { url } = require("inspector");
const { markAsUntransferable, resourceLimits } = require("worker_threads");
const { ServerResponse } = require("http");
const { monitorEventLoopDelay } = require("perf_hooks");
const searcher = new YTSearcher({
    key: "AIzaSyBpKDF14e0FQGaDDVIlj8iL2KOV5sgthDk" ,   
    revealed: true 
});

//the 2 key
//Little bot: first account  : AIzaSyBpKDF14e0FQGaDDVIlj8iL2KOV5sgthDk
//Little bot: Second account : AIzaSyBB8Xd0AslU6mlf5V0F4Tnd72W7YTFqblQ

Client.on("ready" , () => {
    console.log("Hello");
});
//=====================================================================================================================================
//=====================================================================================================================================
//Member add / remove 
Client.on("guildMemberAdd" , member => {
    console.log("Someone joined !")
    member.guild.channels.cache.find(channel => channel.id === "787486069087273004").send("Welcome " + member.displayName);
});
Client.on("guildMemberRemove" , member => {
    console.log("Someone lefted !")
    member.guild.channels.cache.find(channel => channel.id === "787486069087273004").send("Bye Bye " + member.displayName); 
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Ban
Client.on("message", message => {
    if(message.author.bot) return;
    if(message.channel.type == "dm")return;

    if(message.content.startsWith(prefix + "Ban"))
    {
        if(message.member.hasPermission("ADMINISTRATOR"))
        {
            if(message.content.startsWith(prefix +"Ban Help"))
            {
               message.reply(`How to use $Ban ?
               1- Tap the command $Ban @Target.
                   The target will be the person you want to ban.
               2- Tap the @TargetName.
               3- press enter, if you did a mystake, I'll tell you!
               `);
            }
            else
            {
                message.channel.send(message.author.username + ". Your demand has been accepted");
                let mention = message.mentions.members.first();
                if(mention == undefined)
                {
                    message.reply("The selected target is miss-tap or does not exist")
                }
                else
                {
                    if(mention.bannable)
                    {
                        mention.ban();
                        message.channel.send(mention.displayName + "as been ban !");
                    }
                    else
                    {
                        message.channel.send("You have not the possibylity of banning this target");
                    }
                }
            }
        }
        else 
        {
        message.channel.send(`Sorry ${message.author.username}. But it seems that you don't have privileges' to tap that type of command`); 
        }
    }
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message kick
Client.on("message", message => {
    if(message.author.bot) return;
    if(message.channel.type == "dm")return;

    if(message.content.startsWith(prefix + "Kick"))
    {
        if(message.member.hasPermission("ADMINISTRATOR"))
        {
            if(message.content.startsWith(prefix +"Kick Help"))
            {
               message.reply(`How to use $Kick ?
               1- Tap the command $Kick @Target
                   The target will be the person you want to Kick.
               2- Tap the @TargetName
               3- press enter, if you did a mystake, I'll tell you!
               `);
            }
            else
            {
                message.channel.send(message.author.username + ". Your demand has been accepted");
                let mention = message.mentions.members.first();
                if(mention == undefined)
                {
                    message.reply("The selected target is miss-tap or does not exist")
                }
                else
                {
                    if(mention.kickable)
                    {
                        mention.kick();
                        message.channel.send(mention.displayName + " as been Kick !");
                    }
                    else
                    {
                        message.channel.send("You have not the possibylity of kicking this target");
                    }
                } 
            }
        }
        else 
        {
        message.channel.send(`Sorry ${message.author.username}. But it seems that you don't have privileges' to tap that type of command`); 
        }
    }
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Mute
Client.on("message", message => {
    if(message.author.bot) return;
    if(message.channel.type == "dm")return;

    if(message.content.startsWith(prefix + "Mute"))
    {
        if(message.member.hasPermission("ADMINISTRATOR"))
        {
            if(message.content.startsWith(prefix +"Mute Help"))
            {
               message.reply(`How to use $Mute ?
               1- Tap the command $Mute @Target
                   The target will be the person you want to Kick.
               2- Tap the @TargetName
               3- press enter, if you did a mystake, I'll tell you!
               `);
            }
            else
            {
                message.channel.send(message.author.username + ". Your demand has been accepted");
                let mention = message.mentions.members.first();
                if(mention == undefined)
                {
                    message.reply("The selected target is miss-tap or does not exist");
                }
                else
                {
                    mention.roles.add("787817446517243934");
                    message.channel.send(mention.displayName + " as been mute !");
                }
            }
        }
        else 
        {
        message.channel.send(`Sorry ${message.author.username}. But it seems that you don't have privileges' to tap that type of command`); 
        }
    }
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Unmute
Client.on("message", message => {
    if(message.author.bot) return;
    if(message.channel.type == "dm")return;

    if(message.content.startsWith(prefix + "Unmute"))
    {
        if(message.member.hasPermission("ADMINISTRATOR"))
        {
            if(message.content.startsWith(prefix +"Unmute Help"))
            {
               message.reply(`How to use $Unmute ?
               1- Tap the command $unmute @Target
                   The target will be the person you want to Kick.
               2- Tap the @TargetName
               3- press enter, if you did a mystake, I'll tell you!
               `);
            }
            else
            {
                message.channel.send(message.author.username + ". Your demand has been accepted");
                let mention = message.mentions.members.first();
                if(mention == undefined)
                {
                    message.reply("The selected target is miss-tap or does not exist");
                }
                else
                {
                    mention.roles.remove("787817446517243934");
                    message.channel.send(mention.displayName + " as been Unmute !");
                }
            }
        }
        else 
        {
        message.channel.send(`Sorry ${message.author.username}. But it seems that you don't have privileges' to tap that type of command`); 
        }
    }
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Hello
Client.on("message", message => {
    if(message.author.bot) return;
    if(message.content == prefix + "Hello"){
        message.channel.send("Hello " +  message.author.username); 
    }
});
Client.on("message", message => {
    if(message.author.bot) return;
    if(message.content == prefix + "hello"){
        message.channel.send("Hello " +  message.author.username); 
    }
});
Client.on("message", message => {
        if(message.author.bot) return;
        if(message.content == prefix + "hi"){
            message.channel.send("Hello " +  message.author.username); 
        }
});
Client.on("message", message => {
        if(message.author.bot) return;
        if(message.content == prefix + "Hi"){
            message.channel.send("Hello " +  message.author.username); 
        }
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Buzz
Client.on("message" , message =>{
if(message.author.bot) return;
if(message.content == prefix + "Buzz"){
    message.channel.send("Buzz-Buzz")
};
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Music
Client.on("message" , message => {
    if(message.content.startsWith(prefix + "Youtube")){
        if(message.content.startsWith(prefix +"Youtube Help")){
           message.reply(`How to use $Youtube ?
           1- Tap the command $Youtube
           2- Tap the Link (tap it carfully or copy past)
           3- press enter, if you did a mystake, I'll tell you!
           `) ;
        }else{
            if(message.member.voice.channel){
                message.member.voice.channel.join().then(connection => {
                    let args = message.content.split(" ");
                    message.delete();

                   if(!args[1]){
                        message.reply("Link miss-tap or none existing !");
                        message.channel.send("$Stop");
                    }
                    else{
                        let dispatcher = connection.play(ytdl(args[1], {filter: 'audioonly'}));
                        message.reply("Now playing")
                        
                        dispatcher.on("finish" , () => {
                            dispatcher.destroy();
                            connection.disconnect();
                        });

                        dispatcher.on("error" , err => {
                        console.log("Erreur : " + err )
                        });
                    }

                }).catch(err => {
                    message.reply("Error as occured ! :" + err);
                    message.channel.send("$Stop");
                
                })

            }
            else{
                message.reply("You are not in a voice channel");
            
            }
        }
    }
   
});

Client.on("message", message => {
    if(message.content.startsWith(prefix + "Youtube")){
    message.delete();
    }
})
//=====================================================================================================================================
//=====================================================================================================================================
//Message Music Developed 
Client.on("message" , async(message) =>{
if(message.content.startsWith(prefix)){
    if(message.content.startsWith(prefix + "Play Help")){
        message.delete();
        message.reply(`How to use $Play ?
           1- Tap the command $Play
           2- Tap the thing you want to listen, the program will find the link by himself
           3- press enter, if you did a mystake, I'll tell you!
           ------------------------------------------------------------------------------------------------------------------------------------------
           List of the command of $Play:

           $Stop     : Stop everything, and clear the Queue
           $Skip     : Skip to the next song
           $Pause      : Pause the song that is in play
           $Resume       : Resume the song that as been paused
           `) ;
    }else if(message.content.startsWith(prefix + "Stop Help")){
        message.delete();
        message.reply(`How to use $Stop ?
           1- Tap the command $Stop
           It will clear all the songs in the queue and stop playing in that instant
           3- press enter.
           `) ;
    }else if(message.content.startsWith(prefix + "Skip Help")){
        message.delete();
        message.reply(`How to use $Skip ?
           1- Tap the command $Skip
           It will skip to the next song in the list.
           If you are in a loop, it will just loop around the same songs.
           3- press enter.
           `) ;
    }else if(message.content.startsWith(prefix + "Pause Help")){
        message.delete();
        message.reply(`How to use $Pause ?
           1- Tap the command $pause
           It will pause the song that is playing.
           3- press enter.
           `) ;
    }else if(message.content.startsWith(prefix + "Resume Help")){
        message.delete();
        message.reply(`How to use $Resume ?
           1- Tap the command $Resume
           It will resume the song if it is on pause.
           3- press enter.
           `) ;
    }else if(message.content.startsWith(prefix + "Queue Help")){
        message.delete();
        message.reply(`How to use $Queue ?
           1- Tap the command $Queue
           It will show you the queue of all song added and comming.
           3- press enter.
           `) ;
    }else{
         const prefix = '$';
         const serverQueue = Queue.get(message.guild.id);
         const args = message.content.slice(prefix.length).trim().split(/ +/g);
         const command = args.shift().toLocaleLowerCase();
        
        switch(command){
            case 'play':
                execute(message, serverQueue);
            break;
            case 'stop':
                stop(message, serverQueue);
            break;
            case 'skip':
                skip(message, serverQueue);
            break;
            case 'pause':
                pause(serverQueue);
            break;
            case 'resume':
                resume(serverQueue);
            break;
            case 'queue':
                queue(serverQueue);
            break


        }

         async function execute(message , serverQueue){
             let vc = message.member.voice.channel;
             if(!vc){
                 return message.reply("Please join a voice channel first !");
             }else{
                let result = await searcher.search(args.join(" ") , {type: "video"});
                console.log(result.first.url + "  ||||  " + args.join(" "));
                const songInfo = await ytdl.getInfo(result.first.url)
                let song ={
                    title: songInfo.videoDetails.title,
                    url: songInfo.videoDetails.video_url
                };
                if(!serverQueue){
                    const queueConstructor = {
                        txtChannel: message.channel,
                        VChannel: vc,
                        connection: null,
                        songs: [],
                        volume: 2,
                        playing: true
                        
                    };

                    Queue.set(message.guild.id, queueConstructor);
                    queueConstructor.songs.push(song);
                    try{
                        let connection = await vc.join();
                        queueConstructor.connection = connection;
                        play(message.guild, queueConstructor.songs[0]);
                    }catch (err){
                        console.error(err);
                        Queue.delete(message.guild.id);
                        return console.log("Unable to join the Voice Channel !")
                    }
                }else{
                    console.log("Adding a song")
                    serverQueue.songs.push(song);
                    return message.reply("The selected song as been added !")
                    
                 }
             }
         }
         function play(guild, song){
             const serverQueue = Queue.get(guild.id);
             if(!song){
                 serverQueue.VChannel.leave();
                 Queue.delete(guild.id);
                 return;
             }
            message.reply("Now Playing !");
            console.log("Now Playing : " )
            const dispatcher = serverQueue.connection
            
             .play(ytdl(song.url))
             .on('finish', () =>{
                serverQueue.songs.shift();
                 play(guild, serverQueue.songs[0]);
             })
         }
         function stop (message, serverQueue){
             if(!message.member.voice.channel){
             return message.reply("You need to be in a Voice Channel first !")}
             serverQueue.song =[];
             serverQueue.connection.dispatcher.end();
             console.log("List Clear and Stop") 
             }
             
         }
         function skip (message, serverQueue){
            if(!message.member.voice.channel)
            return message.reply("You need to be in a Voice Channel first !");
            if(!serverQueue)
            return message.reply("There is nothing to skip !");
            serverQueue.connection.dispatcher.end(); 
            message.channel.send("Next. . .")
            console.log("Skiping the next song: " )   
         }
         function pause(serverQueue){
            if(!serverQueue.connection)
                return message.channel.send("There is no music currently playing !");
            if(!message.member.voice.channel)
                return message.channel.send("You are not in the Voice Channel !");
            if(!serverQueue.connection.dispatcher.pause)
                return message.channel.send("The song is already paused !")
            serverQueue.connection.dispatcher.pause();
            message.channel.send("The song as been paused !")
         }
         function resume(serverQueue){
            if(!serverQueue.connection)
                return message.channel.send("There is no music currently playing !");
            if(!message.member.voice.channel)
                return message.channel.send("You are not in the Voice Channel !");
            if(serverQueue.connection.dispatcher.resumed)
                return message.channel.send("The song is already playing !")
            serverQueue.connection.dispatcher.resume();
            message.channel.send("The song as been resumed !")
         }
         function queue(serverQueue){
            if(!serverQueue.connection)
            return message.channel.send("There is no music currently playing !");
        if(!message.member.voice.channel)
            return message.channel.send("You are not in the Voice Channel !");

            let nowPlaying = serverQueue.songs[0];
            let qmsg =` Now playing : ${nowPlaying.title}\n-----------------------------------------\n`

            for(var index = 1; index < serverQueue.songs.length; index++){
                qmsg += `${index}. ${serverQueue.songs[index].title}\n`
            }
            message.channel.send('```' + qmsg + "Requested by :" + message.author.username + '```')
         }
    }
        
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Audio help
Client.on("message" , message => {
   
    if(message.content.startsWith(prefix + "Audio Help")){
        message.channel.send(`
How to use $Play ?
        1- Tap the command $Play
        2- Tap the thing you want to listen, the program will find the link by himself
        3- press enter.
How to use $Stop ?
        1- Tap the command $Stop
        It will clear all the songs in the queue and stop playing in that instant
        3- press enter.
How to use $Skip ?
        1- Tap the command $Skip
        It will skip to the next song in the list.
        If you are in a loop, it will just loop around the same songs.
        3- press enter.
How to use $Pause ?
        1- Tap the command $pause
        It will pause the song that is playing.
        3- press enter.
How to use $Resume ?
        1- Tap the command $Resume
        It will resume the song if it is on pause.
        3- press enter.
How to use $Queue ?
        1- Tap the command $Queue
        It will show you the queue of all song added and comming.
        3- press enter.`)
    }
});

//=====================================================================================================================================
//=====================================================================================================================================
//Message Stop
Client.on("message" , message => {
   
    if(message.content.startsWith(prefix + "Stop"))

   {
    if(message.member.voice.channel){
        message.member.voice.channel.leave();

        message.channel.send(`I am now disconnected!
        Have a nice day.`)
        }
    }
});

//=====================================================================================================================================
//=====================================================================================================================================
//Message Kill bot
Client.on("message", message => {
    if(message.author.bot) return;
    if(message.member.hasPermission('ADMINISTRATOR')){
    if(message.content == prefix + "Kill_Bot"){
        message.delete();
        message.channel.send("Now dead , no more command will be process !")
    }
    }
});
Client.on("message", message => {
    if(message.author.bot){
    if(message.content == "Now dead , no more command will be process !"){
        
        cnjrencjnc(cnrnckjencjnciew);
    }
    }
});
//=====================================================================================================================================
//=====================================================================================================================================
//Message Help
Client.on("message", message => {
        if(message.content == prefix + "Help"){
            message.channel.send(`
            Here's the list of all the commands available at this moment !
--------------------------------------------------------------------------------------------------------------------------------------------------
$Ban         (ADMIN ONLY): Ban the desired target                  
$Kick        (ADMIN ONLY): Kick the desired target                   
$Mute      (ADMIN ONLY): Mute the desired target             
$Unmute (ADMIN ONLY): Unmute the desired target       
$Youtube                              : Play the audio of a link Youtube.     
$Play                                      : Play the audio of something.
$Skip                                      : Skip to next song available, or stop the music if there is none in the queue.
$Stop                                     : Stop the audio of $Youtube and $Play.
$Hello                                    : Send you an Hello to boost your day.
$Help                                     : Give you the list of all the commands.
$Buzz                                     : Give you the Buzzzzzzzz.
$Help Audio ( Special command )
--------------------------------------------------------------------------------------------------------------------------------------------------
If you need more Help with a command, type $'the command' Help
`)}
}); 